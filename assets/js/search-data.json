{
  "0": {
    "id": "0",
    "title": "",
    "content": "  404  Page not found :(  The requested page could not be found.",
    "url": "/404.html",
    "relUrl": "/404.html"
  },
  "1": {
    "id": "1",
    "title": "about",
    "content": "who made it?Dan Larremore made webweb in 2013 as a quick and easy way to visualize networks from matlab. Michael Iuzzolino built the first python version. Hunter Wapman upgraded everything to d3.v5, rebuilt the code to be smarter, faster, and more intuitive, and unified the way matlab and python work with the javascript. He also added all the colormaps, networkx, and multi-layer network support.why?People learn a lot from visualizing a network, exploring it interactively, and sharing it with others. But if this comes at the cost of a huge number of clicks, the intuitive and exploratory loops get cut! We built webweb to make it easy to visualize a network, interactively, in as little as a single line of code.how?At its core, webweb is written in javascript, and makes heavy use of d3js. The python and matlab files simply write a correctly html and json, and when the html is opened, the webweb javascript builds the UI and renders the data.The website is made using the static site-generator jekyll. It uses a customized version of the jekyll theme just the docs.when will there be an R/stata/??? version?As soon as someone builds one, of course! :) If there’s a language you’d like to see supported, we’d love for you to build it! We’re happy to help with the process.If you open the hood on the existing python or matlab code, you’ll find that there’s not a whole lot to it: just a bit of error checking on the incoming data, and then writing correctly formatted json into a particular html file. This means that building an interface for webweb is as simple as mapping the three or four concepts webweb uses onto the given language. To see what kind of json that is, you can look at the json code snippets on every example page.licenseGNU General Public License v3+",
    "url": "/about/",
    "relUrl": "/about/"
  },
  "2": {
    "id": "2",
    "title": "add node metadata: binary",
    "content": "webweb’ll display a metadata attribute as binary if every node’s value for that attribute is either True or False.True values will be “big” and False values small, but if we want the opposite, we can do the following:web.display.invertBinarySizes = Trueshowing:                 python            python (networkx)            matlab            jsonfrom webweb import Webweb = Web(    adjacency=[['Dan', 'Hunter'], ['Brian', 'Hunter'], ['Carl', 'Hunter'], ['Carl', 'Brian']],    display={        'nodes' : {            'Dan' : {                'wearsGlasses' : True,            },            'Hunter' : {                'wearsGlasses' : True,            },            'Brian' : {                'wearsGlasses' : True,            },            'Carl' : {                'wearsGlasses' : False,            },        },    },)# use the 'wearsGlasses' to compute node sizesweb.display.sizeBy = 'wearsGlasses'web.display.colorBy = 'wearsGlasses'# show the visualizationweb.show()from webweb import Webimport networkx as nx# webweb'll display a metadata attribute as binary if every node's value for# that attribute is either True or False.G = nx.Graph()G.add_edges_from([['Dan', 'Hunter'], ['Brian', 'Hunter'], ['Carl', 'Hunter'], ['Carl', 'Brian']])G.nodes['Dan']['wearsGlasses'] = TrueG.nodes['Hunter']['wearsGlasses'] = TrueG.nodes['Brian']['wearsGlasses'] = TrueG.nodes['Carl']['wearsGlasses'] = False# `True` values will be &quot;big&quot; and `False` values small, but if we wanted the# opposite, we could do the following:# web.display.invertBinarySizes = True# create the webweb = Web(nx_G=G)# use the 'wearsGlasses' to compute node sizesweb.display.sizeBy = 'wearsGlasses'# show the visualizationweb.show()% define an edge listedge_list = [...    1, 2;    2, 3;    2, 4;    3, 4;    ];% define names for the nodesnames = {'Dan','Hunter','Brian','Carl'};% put the edge list and names into a webweb struct called wwww.networks.network.edgeList = edge_list;ww.display.metadata.name.values = names;% put some boolean metadata into the same structwearsGlasses = [1,1,1,0];ww.display.metadata.wearsGlasses.values = wearsGlasses;ww.display.metadata.wearsGlasses.type   = 'binary';% call webwebwebweb(ww);{    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;wearsGlasses&quot;,        &quot;nodes&quot;: {            &quot;Brian&quot;: {                &quot;wearsGlasses&quot;: true            },            &quot;Carl&quot;: {                &quot;wearsGlasses&quot;: false            },            &quot;Dan&quot;: {                &quot;wearsGlasses&quot;: true            },            &quot;Hunter&quot;: {                &quot;wearsGlasses&quot;: true            }        },        &quot;sizeBy&quot;: &quot;wearsGlasses&quot;    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            &quot;Dan&quot;,                            &quot;Hunter&quot;                        ],                        [                            &quot;Brian&quot;,                            &quot;Hunter&quot;                        ],                        [                            &quot;Carl&quot;,                            &quot;Hunter&quot;                        ],                        [                            &quot;Carl&quot;,                            &quot;Brian&quot;                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/add_node_metadata_binary.html",
    "relUrl": "/docs/examples/add_node_metadata_binary.html"
  },
  "3": {
    "id": "3",
    "title": "add node metadata: categorical",
    "content": "if the set of a metadata attribute’s values contains strings (like cooperativity here), webweb’ll display it as a categorical attribute.if that set is all numbers (like alphabeticallity here), you should tell webweb how to display it by adding that metadata attribute name to the metadata key to the display attribute with an array under categories; a node’s value for this metadata attribute should be an index into this array.showing:                 python            python (networkx)            matlab            jsonfrom webweb import Webweb = Web(    adjacency=[[0, 1], [1, 2]],    display={        'nodes' : {            0 : {                'cooperativity' : 'high',                'alphabeticallity' : 0,            },            1 : {                'cooperativity' : 'low',                'alphabeticallity' : 1,            },            2 : {                'cooperativity' : 'medium',                'alphabeticallity' : 2,            },        },        'metadata' : {            'alphabeticallity' : {                'categories' : ['A-Z', 'a-z', 'W+'],            }        },    },)# we'll compute node color by the `alphabeticallity` metadata attribute# (categorical metadata can't be used to compute node sizes)web.display.colorBy = 'alphabeticallity'# show the visualizationweb.show()from webweb import Webimport networkx as nx# webweb'll display a metadata attribute as binary if every node's value for# that attribute is either True or False.G = nx.Graph()G.add_edges_from([[0, 1], [1, 2]])G.nodes[0]['cooperativity'] = 'high'G.nodes[0]['alphabeticallity'] = 0G.nodes[1]['cooperativity'] = 'low'G.nodes[1]['alphabeticallity'] = 1G.nodes[2]['cooperativity'] = 'medium'G.nodes[2]['alphabeticallity'] = 2# if the set of a metadata attribute's values contains strings (like# 'cooperativity' here), webweb'll display it as a categorical variable.# if that set contains numbers (like 'alphabeticallity' here), you should tell# webweb how to display it by adding that metadata attribute name to the# `metadataInfo` key to the `display` attribute with an array under# `categories`; a node's value for this metadata attribute should be an index# into this array.web = Web(    nx_G=G,    display={        'metadataInfo' : {            'alphabeticallity' : {                'categories' : ['A-Z', 'a-z', 'W+'],            }        },    })# we'll compute node color by the `alphabeticallity` metadata attribute# (categorical metadata can't be used to compute node sizes)web.display.colorBy = 'alphabeticallity'# show the visualizationweb.show()% define a couple edgesedges = [...    1,2;    2,3;...    ];% place the edges in a webweb struct called wwww.networks.network.edgeList = edges;% Define categorical metadata sets in TWO different ways% 1. Categories defined by integers with a set of integer-assigned keysalphabeticallity = [1,2,3];alphabeticallity_keys = {'A-Z','a-z','W+;'};ww.display.metadata.alphabeticallity.values = alphabeticallity;ww.display.metadata.alphabeticallity.categories = alphabeticallity_keys;% 2. Categories defined directly by stringscooperativity = {'high','medium','low'};ww.display.metadata.cooperativity.values = cooperativity;% BONUS: ask webweb to default to present colors by alphabeticallity% This assignment simply needs to match the key of the metadata above.ww.display.colorBy = 'alphabeticallity';% call webwebwebweb(ww);{    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;alphabeticallity&quot;,        &quot;metadata&quot;: {            &quot;alphabeticallity&quot;: {                &quot;categories&quot;: [                    &quot;A-Z&quot;,                    &quot;a-z&quot;,                    &quot;W+&quot;                ]            }        },        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;alphabeticallity&quot;: 0,                &quot;cooperativity&quot;: &quot;high&quot;            },            &quot;1&quot;: {                &quot;alphabeticallity&quot;: 1,                &quot;cooperativity&quot;: &quot;low&quot;            },            &quot;2&quot;: {                &quot;alphabeticallity&quot;: 2,                &quot;cooperativity&quot;: &quot;medium&quot;            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/add_node_metadata_categorical.html",
    "relUrl": "/docs/examples/add_node_metadata_categorical.html"
  },
  "4": {
    "id": "4",
    "title": "add node metadata: scalar",
    "content": "If nodes are indexes, we can add metadata as a vector, like we’ve done here for the velocity attribute. A node’s value for this attribute will be the value at its id’s index in this array.showing:                 python            python (networkx)            matlab            jsonfrom webweb import Webweb = Web(    adjacency=[[0, 1], [1, 2]],    display={        'nodes' : {            0 : {                'age' : 10,            },            1 : {                'age' : 20,            },            2 : {                'age' : 30,            },        },        'metadata' : {            'velocity' : {                'values' : [42, 100, 7]            },        },    },)# we'll compute node size by the `age` metadata attributeweb.display.sizeBy = 'age'# we'll compute node color by the `velocity` metadata attributeweb.display.colorBy = 'velocity'# show the visualizationweb.show()from webweb import Webimport networkx as nxG = nx.Graph()G.add_edges_from([[0, 1], [1, 2]])G.nodes[0]['age'] = 10G.nodes[0]['velocity'] = 42G.nodes[1]['age'] = 20G.nodes[1]['velocity'] = 100G.nodes[2]['age'] = 30G.nodes[2]['velocity'] = 7web = Web(nx_G=G)# we'll compute node size by the `age` metadata attributeweb.display.sizeBy = 'age'# we'll compute node color by the `velocity` metadata attributeweb.display.colorBy = 'velocity'# show the visualizationweb.show()% define a couple edgesedges = [...    1,2;    2,3;...    ];% Place the edges in a webweb struct called wwww.networks.network.edgeList = edges;% Define two scalar metadata setsage = [10,20,30];velocity = [42,100,7];% Put them in the webweb structww.display.metadata.age.values = age;ww.display.metadata.velocity.values = velocity;% BONUS: ask webweb to use age for default node size%        ask webweb to use velocity for default node color% These assignments simply need to match the key of the metadata above.ww.display.sizeBy = 'age';ww.display.colorBy = 'velocity';% call webwebwebweb(ww);{    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;velocity&quot;,        &quot;metadata&quot;: {            &quot;velocity&quot;: {                &quot;values&quot;: [                    42,                    100,                    7                ]            }        },        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;age&quot;: 10            },            &quot;1&quot;: {                &quot;age&quot;: 20            },            &quot;2&quot;: {                &quot;age&quot;: 30            }        },        &quot;sizeBy&quot;: &quot;age&quot;    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/add_node_metadata_scalar.html",
    "relUrl": "/docs/examples/add_node_metadata_scalar.html"
  },
  "5": {
    "id": "5",
    "title": "add node names",
    "content": "we can add node names by setting the nodes attribute in the display variablea node in the adjacency list (e.g., 0 here) will have the metadata of the entry under the same key in the nodes dictionary (if one exists)showing:                 python            python (networkx)            matlab            jsonfrom webweb import Webweb = Web(    adjacency=[[0, 1], [1, 2]],    display={        'nodes' : {            0 : {                'name' : 'Huberg',            },            1 : {                'name' : 'Pierot',            },            2 : {                'name' : 'Slartibertfast',            },        },    },)# show the visualizationweb.show()from webweb import Webimport networkx as nxG = nx.Graph()G.add_edges_from([[0, 1], [1, 2]])G.nodes[0]['name'] = 'Huberg'G.nodes[1]['name'] = 'Pierot'G.nodes[2]['name'] = 'Slartibertfast'# create the webweb = Web(nx_G=G)# show the visualizationweb.show()% define a couple edgesedges = [...    1,2;    2,3;...    ];% Place the edges in a webweb struct called wwww.networks.network.edgeList = edges;% Define some names in an array of cells containing stringsnames = {'Huberg','Pierot','Slartibertfast'};% Put the names in metadata with the special key &quot;names&quot;ww.display.metadata.name.values = names;% Call webwebwebweb(ww){    &quot;display&quot;: {        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;name&quot;: &quot;Huberg&quot;            },            &quot;1&quot;: {                &quot;name&quot;: &quot;Pierot&quot;            },            &quot;2&quot;: {                &quot;name&quot;: &quot;Slartibertfast&quot;            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/add_node_names.html",
    "relUrl": "/docs/examples/add_node_names.html"
  },
  "6": {
    "id": "6",
    "title": "attachWebwebToElementWithId",
    "content": "type: stringwe can attach webweb to an existing html element by setting the attachWebwebToElementWithId parameter. This is useful for embedding webweb.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])# attach the visualization to a given element (no '#')web.display.attachWebwebToElementWithId = 'myElement'# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;attachWebwebToElementWithId&quot;: &quot;myElement&quot;    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/attachWebwebToElementWithId.html",
    "relUrl": "/docs/documentation/display/attachWebwebToElementWithId.html"
  },
  "7": {
    "id": "7",
    "title": "changelog",
    "content": "20190607 - 0.0.37  improved docstring (issue)  changed import of pygmlion from relative to absolute so documentation can be properly generated  added hash to webweb file names so multiple can be shown at once (issue).  fix link width scaling. (oops.)  add __authors__ and __version__ to the package20190607 - 0.0.36  fixed bug introduced in 0.0.33 on linux where files won’t pop up20190607 - 0.0.35  put Show node names widget above of Highlight nodes named widget20190606 - 0.0.34  fixed bug where links opacity and width were scaled without taking into account repeated edges. issue  fixed loading of development client resources (non-user facing issue)20190605 - 0.0.33  automated testing for python  node names will be displayed at a slightly higher simulation temperature20190526 - 0.0.32  added display.showLegend which defaults to = True. If True, will draw the legend.20190206 - canvas!  webweb now renders with canvas! It’s faster and able to support larger networks.  Legends are labeled with what they make legendary.20190130 - 0.0.5  Documentation is live!  webweb is on pip!  matlab is completely rewritten!  webweb visualizations have no dependencies  drag&amp;amp;drop and json saving removed  all node names can be shown  interactive menus can be hidden  binary colors and sizes can be inverted  nodes can be strings (python)  webweb is responsive (mostly)20181125 - 0.0.4Merged fork from Hunter Wapman  supports multi-layer networks  all display parameters can be set  saveable json  color palette can be changed20180123 - 0.0.3.4Merged a fork from Michael Iuzzolino  SVG saving  drag and drop file loading  standard file loading.20150522 - 0.0.3.3  pause/play node movement20140516 - 0.0.3.2  link opacity defaults to checked  charge selection bugfix  link strength can be changed  webweb now runs on Windows20131222 - 0.0.3.1  accepts a single sparse matrix as input20131010 - webweb is featured in a publication!in PLoS Computational Biology, along with interactive versions of all published figures.20130826 - 0.0.3a new and improved version of webweb!2013087 - 0.0.3a new and improved version of webweb!",
    "url": "/changelog/",
    "relUrl": "/changelog/"
  },
  "8": {
    "id": "8",
    "title": "charge",
    "content": "type: positive non-zero integersynonyms: cdefault: 60we can change how much nodes repulse each other.the greater the value for charge, the more nodes will repel each other.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])# could also set web.display.cweb.display.charge = 150# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;charge&quot;: 150    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/charge.html",
    "relUrl": "/docs/documentation/display/charge.html"
  },
  "9": {
    "id": "9",
    "title": "colorBy",
    "content": "type: stringdefault: 'none'we can color nodes by a metadata attribute by setting the colorBy parameter to that attribute’s name.any metadata attribute can be used to compute node size.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]], display={    'metadata' : {        'emotion' : {            'values' : ['happy', 'sad', 'angry', 'sad', 'happy', 'sad']        }    }})# use the 'emotion' attribute to color nodesweb.display.colorBy = 'emotion'# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;emotion&quot;,        &quot;metadata&quot;: {            &quot;emotion&quot;: {                &quot;values&quot;: [                    &quot;happy&quot;,                    &quot;sad&quot;,                    &quot;angry&quot;,                    &quot;sad&quot;,                    &quot;happy&quot;,                    &quot;sad&quot;                ]            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/colorBy.html",
    "relUrl": "/docs/documentation/display/colorBy.html"
  },
  "10": {
    "id": "10",
    "title": "colorPalette",
    "content": "type: stringdefault: 'Set1'we can change the color palette webweb uses to color categorical nodes with the colorPalette parameter.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]], display={    'metadata' : {        'emotion' : {            'values' : ['happy', 'sad', 'angry', 'sad', 'happy', 'sad']        }    }})# use the 'emotion' attribute to color nodesweb.display.colorBy = 'emotion'# set the color palette to use# this value will be used as when we are `display.colorBy` references a# categorical or binary attributeweb.display.colorPalette = 'Set3'# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;emotion&quot;,        &quot;colorPalette&quot;: &quot;Set3&quot;,        &quot;metadata&quot;: {            &quot;emotion&quot;: {                &quot;values&quot;: [                    &quot;happy&quot;,                    &quot;sad&quot;,                    &quot;angry&quot;,                    &quot;sad&quot;,                    &quot;happy&quot;,                    &quot;sad&quot;                ]            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/colorPalette.html",
    "relUrl": "/docs/documentation/display/colorPalette.html"
  },
  "11": {
    "id": "11",
    "title": "display",
    "content": "",
    "url": "/documentation/display/",
    "relUrl": "/documentation/display/"
  },
  "12": {
    "id": "12",
    "title": "display from adjacency matrix",
    "content": "webweb’ll guess whether you’ve given it an edge list or adjacency matrix.showing:                 python            matlab            jsonfrom webweb import Web# make an unweighted adjacency matrixadjacency_matrix = [    [0, 1, 0, 0],    [1, 0, 1, 0],    [0, 1, 0, 1],    [0, 0, 1, 0],]# if you give webweb a matrix with fewer than 4 nodes, it'll think it's an edge# list unless you tell it what's what like so: # web = Web(adjacency_matrix, adjacency_type='matrix')web = Web(adjacency_matrix)# show the visualizationweb.show()% make an unweighted adjacency matrixadjacency_matrix = [...    0, 1, 0, 0;...    1, 0, 1, 0;...    0, 1, 0, 1;...    0, 0, 1, 0;...];% call webwebwebweb(adjacency_matrix);{    &quot;display&quot;: {},    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            1,                            0,                            1                        ],                        [                            2,                            1,                            1                        ],                        [                            3,                            2,                            1                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/display_from_adjacency_matrix.html",
    "relUrl": "/docs/examples/display_from_adjacency_matrix.html"
  },
  "13": {
    "id": "13",
    "title": "display from edge list",
    "content": "showing:                 python            python (networkx)            matlab            jsonfrom webweb import Web# make a list of unweighted edges# (nodes can be numbers or strings)edge_list = [[0, 1], [1, 2], [2, 3]]# create the webweb = Web(edge_list)# show the visualizationweb.show()from webweb import Webimport networkx as nxG = nx.Graph()G.add_edges_from([[0,1], [1, 2], [2, 3]])# create the webweb = Web(nx_G=G)# show the visualizationweb.show()% make a list of unweighted edgesedge_list = [...    1, 2;    2, 3;    3, 4;    ];% call webwebwebweb(edge_list);{    &quot;display&quot;: {},    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/display_from_edge_list.html",
    "relUrl": "/docs/examples/display_from_edge_list.html"
  },
  "14": {
    "id": "14",
    "title": "display from weighted adjacency matrix",
    "content": "if the adjacency matrix we pass has multiple edges between two nodes, the weight of the edge webweb creates between those two nodes will be the sum of those edges’ weights. However, webweb won’t do this with symmetric matrices.showing:                 python            matlab            jsonfrom webweb import Webadjacency_matrix = [    [0, .1, 0, 0, 0],    [.1, 0, .5, 0, 0],    [0, .5, 0, 1, 0],    [0, 0, 1, 0, 2],    [0, 0, 0, 2, 0],]# create the webweb = Web(adjacency_matrix)# we'll scale edge widths by weight to create a visual differenceweb.display.scaleLinkWidth = True# show the visualizationweb.show()% define a weighted adjacency matrixadjacency_matrix = [...    0, .1, 0, 0, 0;...    .1, 0, .5, 0, 0;...    0, .5, 0, 1, 0;...    0, 0, 1, 0, 2;...    0, 0, 0, 2, 0;...];% call webwebwebweb(adjacency_matrix);%% [OPTIONAL] Set default: show weighted edges.% To set a default parameter, we need to creat a webweb struct% and place our parameter setting in it.%% Convert from the matrix to an edgeList.[from,to,weight] = find(triu(adjacency_matrix));% Place this edgeList into a network within the webweb structww.networks.network.edgeList = [from,to,weight];% Set scaleLinkWidth to True. ww.display.scaleLinkWidth = 'True';% call webwebwebweb(ww);{    &quot;display&quot;: {        &quot;scaleLinkWidth&quot;: true    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            1,                            0,                            0.1                        ],                        [                            2,                            1,                            0.5                        ],                        [                            3,                            2,                            1                        ],                        [                            4,                            3,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/display_from_weighted_adjacency_matrix.html",
    "relUrl": "/docs/examples/display_from_weighted_adjacency_matrix.html"
  },
  "15": {
    "id": "15",
    "title": "display from weighted edge list",
    "content": "if the edge list we pass has multiple edges between two nodes, the weight of the edge webweb creates between those two nodes will be the sum of those edges’ weights.showing:                 python            python (networkx)            matlab            jsonfrom webweb import Web# edge weights are the third element in the edgeedge_list = [[0, 1, .1], [1, 2, .5], [2, 3, 1], [3, 4, 2]]# create the webweb = Web(edge_list)# we'll scale edge widths by weight to create a visual differenceweb.display.scaleLinkWidth = True# show the visualizationweb.show()from webweb import Webimport networkx as nxG = nx.Graph()G.add_edges_from([[0, 1, {'weight' : .1}], [1, 2, {'weight' : .5}], [2, 3, {'weight' : 1}], [3, 4, {'weight' : 2}]])# create the webweb = Web(nx_G=G)# scale edge widths by weight so we can see a visual differenceweb.display.scaleLinkWidth = True# show the visualizationweb.show()% make a matrix of weighted edges% edge weights are the third element in the edgeedge_list = [...    1, 2, .1;...     2, 3, .5;...     3, 4, 1;...     4, 5, 2;...];% call webwebwebweb(edge_list);%% [OPTIONAL] Set default: show weighted edges.% To set a default parameter, we need to creat a webweb struct% and place our parameter setting in it.% Place this edgeList into a network within the webweb structww.networks.network.edgeList = edge_list;% Set scaleLinkWidth to True. ww.display.scaleLinkWidth = 'True';% call webwebwebweb(ww);{    &quot;display&quot;: {        &quot;scaleLinkWidth&quot;: true    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1,                            0.1                        ],                        [                            1,                            2,                            0.5                        ],                        [                            2,                            3,                            1                        ],                        [                            3,                            4,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/display_from_weighted_edge_list.html",
    "relUrl": "/docs/examples/display_from_weighted_edge_list.html"
  },
  "16": {
    "id": "16",
    "title": "documentation",
    "content": "full documentation for webweb’s parameters and interfaces",
    "url": "/documentation/",
    "relUrl": "/documentation/"
  },
  "17": {
    "id": "17",
    "title": "examples",
    "content": "",
    "url": "/examples/",
    "relUrl": "/examples/"
  },
  "18": {
    "id": "18",
    "title": "freezeNodeMovement",
    "content": "type: booleandefault: falseIf true, fixes nodes wherever they are. Drag &amp;amp; drop still works. This is probably not a good idea to set unless we’re passing node coordinates as metadata attributes (it’ll leave all the nodes at the top left corner of the visualization).showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web(    adjacency=[[0, 1]],    display={        'nodes' : {            0 : {                'x' : 125,                'y' : 80,            },            1 : {                'x' : 125,                'y' : 160,            },        },    })web.display.freezeNodeMovement = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;freezeNodeMovement&quot;: true,        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;x&quot;: 125,                &quot;y&quot;: 80            },            &quot;1&quot;: {                &quot;x&quot;: 125,                &quot;y&quot;: 160            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/freezeNodeMovement.html",
    "relUrl": "/docs/documentation/display/freezeNodeMovement.html"
  },
  "19": {
    "id": "19",
    "title": "getting started",
    "content": "installationshowing:                 python            matlab# requires numpypip install webwebgit clone https://github.com/dblarremore/webwebthe simplest exampleshowing:                 python            matlabfrom webweb import Web# make a list of unweighted edgesedge_list = [[1, 2], [2, 3], [3, 4]]# instantiate webweb and show the resultWeb(edge_list).show()% make a list of unweighted edgesedge_list = [...    1, 2;    2, 3;    3, 4;    ];webweb(edge_list);Check out the examples page for more usecases!",
    "url": "/getting-started/",
    "relUrl": "/getting-started/"
  },
  "20": {
    "id": "20",
    "title": "gravity",
    "content": "type: positive non-zero floatsynonyms: gdefault: 0.1we can change the strength of the force pulling nodes to the center.the greater the value for gravity, the more nodes will be drawn to the center.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])web.display.gravity = .01# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;gravity&quot;: 0.01    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/gravity.html",
    "relUrl": "/docs/documentation/display/gravity.html"
  },
  "21": {
    "id": "21",
    "title": "height",
    "content": "type: positive non-zero integersynonyms: hwe can change the height of the visualization by setting the display.height property.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])web.display.height = 50# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;height&quot;: 50    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/height.html",
    "relUrl": "/docs/documentation/display/height.html"
  },
  "22": {
    "id": "22",
    "title": "hideMenu",
    "content": "type: booleandefault: falseIf true, webweb’s interactive menu will be hidden and only the network visualization will be shown.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])# hide webweb's menusweb.display.hideMenu = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;hideMenu&quot;: true    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/hideMenu.html",
    "relUrl": "/docs/documentation/display/hideMenu.html"
  },
  "23": {
    "id": "23",
    "title": "webweb",
    "content": "webwebwebweb is a tool for creating, displaying, and sharing interactive network visualizations on the web, designed for simplicity and ease of use. With just a few lines of python, networkx, or matlab, webweb will build and launch a visualization in your browser.Here’s an example of webweb’s style and functionality. The network itself comes from Hunter Wapman et al.’s analysis of character co-occurrences in the novel Infinite Jest.features  simple, lightweight, intuitive, and configurable  python, networkx, and MATLAB support  easy to share (visualizations are contained in a single html file that has no dependencies)  easy to embed  supports metadata, communities, weighted networks, and multi-layer networksthe simplest exampleshowing:                 python            matlabfrom webweb import Web# make a list of unweighted edgesedge_list = [[1, 2], [2, 3], [3, 4]]# instantiate webweb and show the resultWeb(edge_list).show()% make a list of unweighted edgesedge_list = [...    1, 2;    2, 3;    3, 4;    ];webweb(edge_list);installationshowing:                 python            matlab# requires numpypip install webwebgit clone https://github.com/dblarremore/webwebciting webwebyou don’t have to cite webweb to use it, but if you’d like to, we certainly appreciate it!",
    "url": "/",
    "relUrl": "/"
  },
  "24": {
    "id": "24",
    "title": "invertBinaryColors",
    "content": "type: booleandefault: falsewe can flip the colors used for True and False if we’re coloring nodes by a binary attribute.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]], display={    'metadata' : {        'isHappy' : {            'values' : [True, False, False, True, True, False],        }    }})# use the 'isHappy' attribute to color nodesweb.display.colorBy = 'isHappy'# invert the colors used for `False` and `True`web.display.invertBinaryColors = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;isHappy&quot;,        &quot;invertBinaryColors&quot;: true,        &quot;metadata&quot;: {            &quot;isHappy&quot;: {                &quot;values&quot;: [                    true,                    false,                    false,                    true,                    true,                    false                ]            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/invertBinaryColors.html",
    "relUrl": "/docs/documentation/display/invertBinaryColors.html"
  },
  "25": {
    "id": "25",
    "title": "invertBinarySizes",
    "content": "type: booleandefault: falseIf we’re sizing nodes by a binary attribute, by default nodes with a value of True will be big and nodes with a value of False will be small, but if we want to, we can flip that.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]], display={    'metadata' : {        'isHappy' : {            'values' : [True, False, False, True, True, False],        }    }})# use the 'isHappy' attribute to size nodesweb.display.sizeBy = 'isHappy'# invert the sizes used for `False` and `True` (make `False` big and `True` small)web.display.invertBinarySizes = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;invertBinarySizes&quot;: true,        &quot;metadata&quot;: {            &quot;isHappy&quot;: {                &quot;values&quot;: [                    true,                    false,                    false,                    true,                    true,                    false                ]            }        },        &quot;sizeBy&quot;: &quot;isHappy&quot;    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/invertBinarySizes.html",
    "relUrl": "/docs/documentation/display/invertBinarySizes.html"
  },
  "26": {
    "id": "26",
    "title": "kitchen sink",
    "content": "This example shows a webweb visualization with the “kitchen sink” of options, including multiple networks, multi-layer networks, setting of display parameters, and the assigning of metadata in various ways.showing:                 python            matlab            jsonfrom webweb import Webimport random# Give the webweb a title.web = Web(title='kitchen_sink')################################################################################# Network 1 of 3: a stochastic block model (SBM)# Features: a network w/ metadata################################################################################# Create an empty edge list, to be populated during network constructionedge_list = []# group sizesgroup_sizes = [15, 20, 25]# probability of edges between groupsnode_group = [0 for _ in range(group_sizes[0])]node_group += [1 for _ in range(group_sizes[1])] node_group += [2 for _ in range(group_sizes[2])] # group affinity matrixM = [[ 0.25, 0.02, 0    ],     [ 0.02, 0.2,  0.02 ],     [ 0,    0.02, 0.15 ]]# SBMfor i in range(sum(group_sizes)):    for j in range(i):        if random.random() &amp;lt; M[node_group[i]][node_group[j]]:            edge_list.append([i,j])# create a network called sbmweb.networks.sbm(    # assign its edgelist    adjacency=edge_list,    # give it the community metadata    metadata={'community':         {            'values' : node_group,            # tell webweb to display the groups categorically            'type' : 'categorical',        },    })################################################################################# Network 2 of 3: the Zachary Karate Club# Feature: a network w/ node names and additional (binary) metadata################################################################################web.networks.zkc(    adjacency=[[2,1],[3,1],[3,2],[4,1],[4,2],[4,3],[5,1],[6,1],[7,1],[7,5],[7,6],[8,1],[8,2],[8,3],[8,4],[9,1],[9,3],[10,3],[11,1],[11,5],[11,6],[12,1],[13,1],[13,4],[14,1],[14,2],[14,3],[14,4],[17,6],[17,7],[18,1],[18,2],[20,1],[20,2],[22,1],[22,2],[26,24],[26,25],[28,3],[28,24],[28,25],[29,3],[30,24],[30,27],[31,2],[31,9],[32,1],[32,25],[32,26],[32,29],[33,3],[33,9],[33,15],[33,16],[33,19],[33,21],[33,23],[33,24],[33,30],[33,31],[33,32],[34,9],[34,10],[34,14],[34,15],[34,16],[34,19],[34,20],[34,21],[34,23],[34,24],[34,27],[34,28],[34,29],[34,30],[34,31],[34,32],[34,33]],    # assign some metadata to nodes by their id    nodes={1 : { 'headHoncho' : True}, 34 : {'headHoncho' : True}},    metadata={        # use the reserved keyword 'name' to give names to nodes for displaying        'name' : {            'values' : [&quot;Bernita Blizzard&quot;, &quot;Lauran Lenahan&quot;, &quot;Kallie Kerr&quot;, &quot;Yun Yearsley&quot;, &quot;Krystina Kehr&quot;, &quot;Marisa Mccullough&quot;, &quot;Sandra Soderquist&quot;, &quot;Latisha Luczynski&quot;, &quot;Gertrudis Guadarrama&quot;, &quot;Ramonita Raley&quot;, &quot;Tessa Tuff&quot;, &quot;Michell Murphey&quot;, &quot;Juliana Jenny&quot;, &quot;Imogene Ivie&quot;, &quot;Ricky Revis&quot;, &quot;Tonia Tighe&quot;, &quot;Lyle Lamanna&quot;, &quot;Michael Motto&quot;, &quot;Charlie Cartwright&quot;, &quot;Aimee Aschenbrenner&quot;, &quot;Vi Vallery&quot;, &quot;Shaquana Stocking&quot;, &quot;Penelope Percival&quot;, &quot;Bari Barrentine&quot;, &quot;Janie Jeske&quot;, &quot;Breann Brodie&quot;, &quot;Carmel Clara&quot;, &quot;Nada Nicol&quot;, &quot;Francisca Fu&quot;, &quot;Shyla Schranz&quot;, &quot;Clarissa Crooks&quot;, &quot;Hilario Holzwarth&quot;, &quot;Huong Hodge&quot;, &quot;Lavonne Leng&quot;,]        }    })################################################################################# Network 3 of 3: Tree/Ring network (N-Cayley tree)# Features: a multilayer network with different metadata for each layer################################################################################tree_layers = 4branching_factor = 5nodes_queue = [0]# Create an empty edge list, to be populated during layer constructionedge_list = []nodes = {}for tree_layer in range(tree_layers):    new_nodes_queue = []    while len(nodes_queue):        node = nodes_queue.pop(0)        nodes[node] = { 'ring' : tree_layer }        branches = branching_factor if tree_layer == 0 else branching_factor - 1        for _ in range(branches):            new_node = max(nodes.keys()) + 1            edge_list.append([node, new_node])            new_nodes_queue.append(new_node)            nodes[new_node] = { 'ring' : tree_layer + 1 }        nodes_queue = new_nodes_queue    web.networks.tree.add_layer(adjacency=edge_list, nodes=nodes)# tell webweb to display the metdata categoricallyweb.display.metadata = {    'ring' : {        'type' : 'categorical',    }}################################################################################# Display parameters choices and defaults# Demonstrates: how to set default behavior for webweb on opening the html################################################################################web.display.networkName = 'tree'web.display.networkLayer = 2web.display.colorBy = 'ring'web.display.sizeBy = 'degree'web.display.gravity = .3web.display.charge = 30web.display.linkLength = 15web.display.colorPalette = 'Greens'web.display.scaleLinkOpacity = Falseweb.display.scaleLinkWidth = True# show the visualizationweb.show()% Give the webweb a title.ww.title = 'kitchen_sink';%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Network 1 of 3: a stochastic block model (SBM)                          %% Features: a network w/ metadata                                         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create an empty edge list, to be populated during network constructionedgeList = [];groupSizes = [15,20,25]; groupProbs = [0.25, 0.02, 0; 0.02, 0.2, 0.02; 0, 0.02, 0.15];% Create an array to store the group label for each node in the networkgroupIDs = [];for i=1:length(groupSizes)        groupIDs = [groupIDs; i*ones(groupSizes(i),1)];end% Populate the edge list.for i=1:sum(groupSizes)-1    for j=i:sum(groupSizes)        if rand &amp;lt; groupProbs(groupIDs(i),groupIDs(j))            edgeList(end+1,:) = [i,j];        end    endend% Create a network called sbm, and assign its edgelistww.networks.sbm.edgeList = edgeList;% Assign the sbm network some metadata equal to the group IDs.ww.networks.sbm.metadata.community.values = groupIDs;% Tell webweb the metadata type here is categorical (and not scalar).ww.networks.sbm.metadata.community.type = 'categorical';%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Network 2 of 3: the Zachary Karate Club                                 %% Feature: a network w/ node names and additional (binary ) metadata      %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Directly specify an edge list.ww.networks.zkc.edgeList = [2,1;3,1;3,2;4,1;4,2;4,3;5,1;6,1;7,1;7,5;7,6;8,1;8,2;8,3;8,4;9,1;9,3;10,3;11,1;11,5;11,6;12,1;13,1;13,4;14,1;14,2;14,3;14,4;17,6;17,7;18,1;18,2;20,1;20,2;22,1;22,2;26,24;26,25;28,3;28,24;28,25;29,3;30,24;30,27;31,2;31,9;32,1;32,25;32,26;32,29;33,3;33,9;33,15;33,16;33,19;33,21;33,23;33,24;33,30;33,31;33,32;34,9;34,10;34,14;34,15;34,16;34,19;34,20;34,21;34,23;34,24;34,27;34,28;34,29;34,30;34,31;34,32;34,33];% Specify node names using metadata called 'name', a reserved keywordww.networks.zkc.metadata.name.values = {&quot;Bernita Blizzard&quot;, &quot;Lauran Lenahan&quot;, &quot;Kallie Kerr&quot;, &quot;Yun Yearsley&quot;, &quot;Krystina Kehr&quot;, &quot;Marisa Mccullough&quot;, &quot;Sandra Soderquist&quot;, &quot;Latisha Luczynski&quot;, &quot;Gertrudis Guadarrama&quot;, &quot;Ramonita Raley&quot;, &quot;Tessa Tuff&quot;, &quot;Michell Murphey&quot;, &quot;Juliana Jenny&quot;, &quot;Imogene Ivie&quot;, &quot;Ricky Revis&quot;, &quot;Tonia Tighe&quot;, &quot;Lyle Lamanna&quot;, &quot;Michael Motto&quot;, &quot;Charlie Cartwright&quot;, &quot;Aimee Aschenbrenner&quot;, &quot;Vi Vallery&quot;, &quot;Shaquana Stocking&quot;, &quot;Penelope Percival&quot;, &quot;Bari Barrentine&quot;, &quot;Janie Jeske&quot;, &quot;Breann Brodie&quot;, &quot;Carmel Clara&quot;, &quot;Nada Nicol&quot;, &quot;Francisca Fu&quot;, &quot;Shyla Schranz&quot;, &quot;Clarissa Crooks&quot;, &quot;Hilario Holzwarth&quot;, &quot;Huong Hodge&quot;, &quot;Lavonne Leng&quot;};% Create some extra &quot;notes&quot; about two of the nodes (1 and 34) by creating% a map from 1 and 34 to two struct variables. This format will be % correctly written by the jsonencode function by webweb.nodeNotes = containers.Map(...    {'1','34'},...    {struct('headHoncho',true),...    struct('headHoncho',true)});ww.networks.zkc.nodes = nodeNotes;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Network 3 of 3: Tree/Ring network (N-Cayley tree)                       %% Features: a multilayer network with different metadata for each layer   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Create an empty network called tree, with to-be-populated layersww.networks.tree.layers = {};% Create an empty edge list, to be populated during layer constructionedgeList = [];tree_layers = 4; branching_factor = 5; nodes_queue = 1; nodeCounter = 1;% Create an array to store the layer of each node in the treeringNumber = 0;for ring=1:tree_layers    new_nodes_queue = [];    while ~isempty(nodes_queue)        for i=1:branching_factor            nodeCounter = nodeCounter+1;            new_nodes_queue(end+1) = nodeCounter;            % append to edge list and metadata            edgeList(end+1,:) = [nodes_queue(end),nodeCounter];            ringNumber(end+1) = ring;        end        nodes_queue(end) = [];    end    if ring==1        branching_factor = branching_factor-1;    end    nodes_queue = new_nodes_queue;    % Create a temporary variable called netObj, and put in an edgelist...    netObj.edgeList = edgeList;    % ... and metadata values for which node is in which ring.    netObj.metadata.ring.values = ringNumber;    netObj.metadata.ring.type = 'categorical';    % Append that netObj as the next layer in the tree network.    ww.networks.tree.layers{end+1} = netObj;end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Display parameters choices and defaults                                   %% Demonstrates: how to set default behavior for webweb on opening the html  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ww.display.networkName = 'tree';ww.display.networkLayer = 2;ww.display.colorBy = 'ring';ww.display.sizeBy = 'degree';ww.display.gravity = 0.3;ww.display.charge = 30;ww.display.linkLength = 15;ww.display.colorPalette = 'Greens';ww.display.scaleLinkOpacity = 0;ww.display.scaleLinkWidth = 1;% call webwebwebweb(ww);{    &quot;display&quot;: {        &quot;charge&quot;: 30,        &quot;colorBy&quot;: &quot;ring&quot;,        &quot;colorPalette&quot;: &quot;Greens&quot;,        &quot;gravity&quot;: 0.3,        &quot;linkLength&quot;: 15,        &quot;metadata&quot;: {            &quot;ring&quot;: {                &quot;type&quot;: &quot;categorical&quot;            }        },        &quot;networkLayer&quot;: 2,        &quot;networkName&quot;: &quot;tree&quot;,        &quot;scaleLinkOpacity&quot;: false,        &quot;scaleLinkWidth&quot;: true,        &quot;sizeBy&quot;: &quot;degree&quot;    },    &quot;networks&quot;: {        &quot;sbm&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            1,                            0                        ],                        [                            5,                            1                        ],                        [                            5,                            2                        ],                        [                            7,                            5                        ],                        [                            8,                            1                        ],                        [                            8,                            2                        ],                        [                            8,                            3                        ],                        [                            9,                            0                        ],                        [                            9,                            2                        ],                        [                            10,                            1                        ],                        [                            10,                            3                        ],                        [                            10,                            8                        ],                        [                            10,                            9                        ],                        [                            11,                            4                        ],                        [                            11,                            6                        ],                        [                            12,                            0                        ],                        [                            12,                            11                        ],                        [                            13,                            4                        ],                        [                            13,                            10                        ],                        [                            13,                            11                        ],                        [                            14,                            7                        ],                        [                            14,                            8                        ],                        [                            14,                            11                        ],                        [                            14,                            12                        ],                        [                            16,                            15                        ],                        [                            18,                            4                        ],                        [                            18,                            15                        ],                        [                            19,                            17                        ],                        [                            22,                            15                        ],                        [                            22,                            18                        ],                        [                            22,                            19                        ],                        [                            23,                            3                        ],                        [                            23,                            16                        ],                        [                            23,                            18                        ],                        [                            23,                            19                        ],                        [                            23,                            20                        ],                        [                            24,                            19                        ],                        [                            24,                            20                        ],                        [                            25,                            15                        ],                        [                            25,                            22                        ],                        [                            26,                            23                        ],                        [                            26,                            24                        ],                        [                            26,                            25                        ],                        [                            27,                            16                        ],                        [                            27,                            17                        ],                        [                            27,                            18                        ],                        [                            27,                            25                        ],                        [                            27,                            26                        ],                        [                            28,                            22                        ],                        [                            29,                            22                        ],                        [                            29,                            27                        ],                        [                            29,                            28                        ],                        [                            30,                            17                        ],                        [                            30,                            19                        ],                        [                            30,                            20                        ],                        [                            30,                            27                        ],                        [                            31,                            16                        ],                        [                            31,                            21                        ],                        [                            31,                            26                        ],                        [                            31,                            27                        ],                        [                            31,                            28                        ],                        [                            33,                            15                        ],                        [                            33,                            32                        ],                        [                            34,                            20                        ],                        [                            34,                            23                        ],                        [                            34,                            28                        ],                        [                            34,                            30                        ],                        [                            34,                            31                        ],                        [                            36,                            29                        ],                        [                            36,                            34                        ],                        [                            37,                            35                        ],                        [                            39,                            20                        ],                        [                            39,                            26                        ],                        [                            39,                            36                        ],                        [                            39,                            37                        ],                        [                            40,                            27                        ],                        [                            41,                            17                        ],                        [                            41,                            25                        ],                        [                            42,                            22                        ],                        [                            42,                            35                        ],                        [                            42,                            36                        ],                        [                            43,                            36                        ],                        [                            43,                            37                        ],                        [                            43,                            38                        ],                        [                            43,                            42                        ],                        [                            44,                            37                        ],                        [                            45,                            39                        ],                        [                            46,                            38                        ],                        [                            46,                            45                        ],                        [                            47,                            35                        ],                        [                            48,                            44                        ],                        [                            49,                            45                        ],                        [                            49,                            47                        ],                        [                            49,                            48                        ],                        [                            50,                            36                        ],                        [                            50,                            47                        ],                        [                            51,                            19                        ],                        [                            51,                            35                        ],                        [                            53,                            43                        ],                        [                            53,                            48                        ],                        [                            54,                            51                        ],                        [                            55,                            16                        ],                        [                            55,                            44                        ],                        [                            55,                            47                        ],                        [                            55,                            51                        ],                        [                            55,                            54                        ],                        [                            56,                            25                        ],                        [                            56,                            36                        ],                        [                            56,                            38                        ],                        [                            56,                            44                        ],                        [                            56,                            53                        ],                        [                            56,                            54                        ],                        [                            57,                            27                        ],                        [                            57,                            44                        ],                        [                            58,                            31                        ],                        [                            58,                            45                        ],                        [                            58,                            54                        ],                        [                            59,                            43                        ],                        [                            59,                            50                        ]                    ],                    &quot;metadata&quot;: {                        &quot;community&quot;: {                            &quot;type&quot;: &quot;categorical&quot;,                            &quot;values&quot;: [                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                0,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                1,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2,                                2                            ]                        }                    },                    &quot;nodes&quot;: {}                }            ]        },        &quot;tree&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            0,                            2                        ],                        [                            0,                            3                        ],                        [                            0,                            4                        ],                        [                            0,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {                        &quot;0&quot;: {                            &quot;ring&quot;: 0                        },                        &quot;1&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;2&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;3&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;4&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;5&quot;: {                            &quot;ring&quot;: 1                        }                    }                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            0,                            2                        ],                        [                            0,                            3                        ],                        [                            0,                            4                        ],                        [                            0,                            5                        ],                        [                            1,                            6                        ],                        [                            1,                            7                        ],                        [                            1,                            8                        ],                        [                            1,                            9                        ],                        [                            2,                            10                        ],                        [                            2,                            11                        ],                        [                            2,                            12                        ],                        [                            2,                            13                        ],                        [                            3,                            14                        ],                        [                            3,                            15                        ],                        [                            3,                            16                        ],                        [                            3,                            17                        ],                        [                            4,                            18                        ],                        [                            4,                            19                        ],                        [                            4,                            20                        ],                        [                            4,                            21                        ],                        [                            5,                            22                        ],                        [                            5,                            23                        ],                        [                            5,                            24                        ],                        [                            5,                            25                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {                        &quot;0&quot;: {                            &quot;ring&quot;: 0                        },                        &quot;1&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;10&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;11&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;12&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;13&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;14&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;15&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;16&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;17&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;18&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;19&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;2&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;20&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;21&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;22&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;23&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;24&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;25&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;3&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;4&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;5&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;6&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;7&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;8&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;9&quot;: {                            &quot;ring&quot;: 2                        }                    }                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            0,                            2                        ],                        [                            0,                            3                        ],                        [                            0,                            4                        ],                        [                            0,                            5                        ],                        [                            1,                            6                        ],                        [                            1,                            7                        ],                        [                            1,                            8                        ],                        [                            1,                            9                        ],                        [                            2,                            10                        ],                        [                            2,                            11                        ],                        [                            2,                            12                        ],                        [                            2,                            13                        ],                        [                            3,                            14                        ],                        [                            3,                            15                        ],                        [                            3,                            16                        ],                        [                            3,                            17                        ],                        [                            4,                            18                        ],                        [                            4,                            19                        ],                        [                            4,                            20                        ],                        [                            4,                            21                        ],                        [                            5,                            22                        ],                        [                            5,                            23                        ],                        [                            5,                            24                        ],                        [                            5,                            25                        ],                        [                            6,                            26                        ],                        [                            6,                            27                        ],                        [                            6,                            28                        ],                        [                            6,                            29                        ],                        [                            7,                            30                        ],                        [                            7,                            31                        ],                        [                            7,                            32                        ],                        [                            7,                            33                        ],                        [                            8,                            34                        ],                        [                            8,                            35                        ],                        [                            8,                            36                        ],                        [                            8,                            37                        ],                        [                            9,                            38                        ],                        [                            9,                            39                        ],                        [                            9,                            40                        ],                        [                            9,                            41                        ],                        [                            10,                            42                        ],                        [                            10,                            43                        ],                        [                            10,                            44                        ],                        [                            10,                            45                        ],                        [                            11,                            46                        ],                        [                            11,                            47                        ],                        [                            11,                            48                        ],                        [                            11,                            49                        ],                        [                            12,                            50                        ],                        [                            12,                            51                        ],                        [                            12,                            52                        ],                        [                            12,                            53                        ],                        [                            13,                            54                        ],                        [                            13,                            55                        ],                        [                            13,                            56                        ],                        [                            13,                            57                        ],                        [                            14,                            58                        ],                        [                            14,                            59                        ],                        [                            14,                            60                        ],                        [                            14,                            61                        ],                        [                            15,                            62                        ],                        [                            15,                            63                        ],                        [                            15,                            64                        ],                        [                            15,                            65                        ],                        [                            16,                            66                        ],                        [                            16,                            67                        ],                        [                            16,                            68                        ],                        [                            16,                            69                        ],                        [                            17,                            70                        ],                        [                            17,                            71                        ],                        [                            17,                            72                        ],                        [                            17,                            73                        ],                        [                            18,                            74                        ],                        [                            18,                            75                        ],                        [                            18,                            76                        ],                        [                            18,                            77                        ],                        [                            19,                            78                        ],                        [                            19,                            79                        ],                        [                            19,                            80                        ],                        [                            19,                            81                        ],                        [                            20,                            82                        ],                        [                            20,                            83                        ],                        [                            20,                            84                        ],                        [                            20,                            85                        ],                        [                            21,                            86                        ],                        [                            21,                            87                        ],                        [                            21,                            88                        ],                        [                            21,                            89                        ],                        [                            22,                            90                        ],                        [                            22,                            91                        ],                        [                            22,                            92                        ],                        [                            22,                            93                        ],                        [                            23,                            94                        ],                        [                            23,                            95                        ],                        [                            23,                            96                        ],                        [                            23,                            97                        ],                        [                            24,                            98                        ],                        [                            24,                            99                        ],                        [                            24,                            100                        ],                        [                            24,                            101                        ],                        [                            25,                            102                        ],                        [                            25,                            103                        ],                        [                            25,                            104                        ],                        [                            25,                            105                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {                        &quot;0&quot;: {                            &quot;ring&quot;: 0                        },                        &quot;1&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;10&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;100&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;101&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;102&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;103&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;104&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;105&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;11&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;12&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;13&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;14&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;15&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;16&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;17&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;18&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;19&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;2&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;20&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;21&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;22&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;23&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;24&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;25&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;26&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;27&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;28&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;29&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;3&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;30&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;31&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;32&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;33&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;34&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;35&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;36&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;37&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;38&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;39&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;4&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;40&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;41&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;42&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;43&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;44&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;45&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;46&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;47&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;48&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;49&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;5&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;50&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;51&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;52&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;53&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;54&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;55&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;56&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;57&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;58&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;59&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;6&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;60&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;61&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;62&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;63&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;64&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;65&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;66&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;67&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;68&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;69&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;7&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;70&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;71&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;72&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;73&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;74&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;75&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;76&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;77&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;78&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;79&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;8&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;80&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;81&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;82&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;83&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;84&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;85&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;86&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;87&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;88&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;89&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;9&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;90&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;91&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;92&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;93&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;94&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;95&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;96&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;97&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;98&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;99&quot;: {                            &quot;ring&quot;: 3                        }                    }                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            0,                            2                        ],                        [                            0,                            3                        ],                        [                            0,                            4                        ],                        [                            0,                            5                        ],                        [                            1,                            6                        ],                        [                            1,                            7                        ],                        [                            1,                            8                        ],                        [                            1,                            9                        ],                        [                            2,                            10                        ],                        [                            2,                            11                        ],                        [                            2,                            12                        ],                        [                            2,                            13                        ],                        [                            3,                            14                        ],                        [                            3,                            15                        ],                        [                            3,                            16                        ],                        [                            3,                            17                        ],                        [                            4,                            18                        ],                        [                            4,                            19                        ],                        [                            4,                            20                        ],                        [                            4,                            21                        ],                        [                            5,                            22                        ],                        [                            5,                            23                        ],                        [                            5,                            24                        ],                        [                            5,                            25                        ],                        [                            6,                            26                        ],                        [                            6,                            27                        ],                        [                            6,                            28                        ],                        [                            6,                            29                        ],                        [                            7,                            30                        ],                        [                            7,                            31                        ],                        [                            7,                            32                        ],                        [                            7,                            33                        ],                        [                            8,                            34                        ],                        [                            8,                            35                        ],                        [                            8,                            36                        ],                        [                            8,                            37                        ],                        [                            9,                            38                        ],                        [                            9,                            39                        ],                        [                            9,                            40                        ],                        [                            9,                            41                        ],                        [                            10,                            42                        ],                        [                            10,                            43                        ],                        [                            10,                            44                        ],                        [                            10,                            45                        ],                        [                            11,                            46                        ],                        [                            11,                            47                        ],                        [                            11,                            48                        ],                        [                            11,                            49                        ],                        [                            12,                            50                        ],                        [                            12,                            51                        ],                        [                            12,                            52                        ],                        [                            12,                            53                        ],                        [                            13,                            54                        ],                        [                            13,                            55                        ],                        [                            13,                            56                        ],                        [                            13,                            57                        ],                        [                            14,                            58                        ],                        [                            14,                            59                        ],                        [                            14,                            60                        ],                        [                            14,                            61                        ],                        [                            15,                            62                        ],                        [                            15,                            63                        ],                        [                            15,                            64                        ],                        [                            15,                            65                        ],                        [                            16,                            66                        ],                        [                            16,                            67                        ],                        [                            16,                            68                        ],                        [                            16,                            69                        ],                        [                            17,                            70                        ],                        [                            17,                            71                        ],                        [                            17,                            72                        ],                        [                            17,                            73                        ],                        [                            18,                            74                        ],                        [                            18,                            75                        ],                        [                            18,                            76                        ],                        [                            18,                            77                        ],                        [                            19,                            78                        ],                        [                            19,                            79                        ],                        [                            19,                            80                        ],                        [                            19,                            81                        ],                        [                            20,                            82                        ],                        [                            20,                            83                        ],                        [                            20,                            84                        ],                        [                            20,                            85                        ],                        [                            21,                            86                        ],                        [                            21,                            87                        ],                        [                            21,                            88                        ],                        [                            21,                            89                        ],                        [                            22,                            90                        ],                        [                            22,                            91                        ],                        [                            22,                            92                        ],                        [                            22,                            93                        ],                        [                            23,                            94                        ],                        [                            23,                            95                        ],                        [                            23,                            96                        ],                        [                            23,                            97                        ],                        [                            24,                            98                        ],                        [                            24,                            99                        ],                        [                            24,                            100                        ],                        [                            24,                            101                        ],                        [                            25,                            102                        ],                        [                            25,                            103                        ],                        [                            25,                            104                        ],                        [                            25,                            105                        ],                        [                            26,                            106                        ],                        [                            26,                            107                        ],                        [                            26,                            108                        ],                        [                            26,                            109                        ],                        [                            27,                            110                        ],                        [                            27,                            111                        ],                        [                            27,                            112                        ],                        [                            27,                            113                        ],                        [                            28,                            114                        ],                        [                            28,                            115                        ],                        [                            28,                            116                        ],                        [                            28,                            117                        ],                        [                            29,                            118                        ],                        [                            29,                            119                        ],                        [                            29,                            120                        ],                        [                            29,                            121                        ],                        [                            30,                            122                        ],                        [                            30,                            123                        ],                        [                            30,                            124                        ],                        [                            30,                            125                        ],                        [                            31,                            126                        ],                        [                            31,                            127                        ],                        [                            31,                            128                        ],                        [                            31,                            129                        ],                        [                            32,                            130                        ],                        [                            32,                            131                        ],                        [                            32,                            132                        ],                        [                            32,                            133                        ],                        [                            33,                            134                        ],                        [                            33,                            135                        ],                        [                            33,                            136                        ],                        [                            33,                            137                        ],                        [                            34,                            138                        ],                        [                            34,                            139                        ],                        [                            34,                            140                        ],                        [                            34,                            141                        ],                        [                            35,                            142                        ],                        [                            35,                            143                        ],                        [                            35,                            144                        ],                        [                            35,                            145                        ],                        [                            36,                            146                        ],                        [                            36,                            147                        ],                        [                            36,                            148                        ],                        [                            36,                            149                        ],                        [                            37,                            150                        ],                        [                            37,                            151                        ],                        [                            37,                            152                        ],                        [                            37,                            153                        ],                        [                            38,                            154                        ],                        [                            38,                            155                        ],                        [                            38,                            156                        ],                        [                            38,                            157                        ],                        [                            39,                            158                        ],                        [                            39,                            159                        ],                        [                            39,                            160                        ],                        [                            39,                            161                        ],                        [                            40,                            162                        ],                        [                            40,                            163                        ],                        [                            40,                            164                        ],                        [                            40,                            165                        ],                        [                            41,                            166                        ],                        [                            41,                            167                        ],                        [                            41,                            168                        ],                        [                            41,                            169                        ],                        [                            42,                            170                        ],                        [                            42,                            171                        ],                        [                            42,                            172                        ],                        [                            42,                            173                        ],                        [                            43,                            174                        ],                        [                            43,                            175                        ],                        [                            43,                            176                        ],                        [                            43,                            177                        ],                        [                            44,                            178                        ],                        [                            44,                            179                        ],                        [                            44,                            180                        ],                        [                            44,                            181                        ],                        [                            45,                            182                        ],                        [                            45,                            183                        ],                        [                            45,                            184                        ],                        [                            45,                            185                        ],                        [                            46,                            186                        ],                        [                            46,                            187                        ],                        [                            46,                            188                        ],                        [                            46,                            189                        ],                        [                            47,                            190                        ],                        [                            47,                            191                        ],                        [                            47,                            192                        ],                        [                            47,                            193                        ],                        [                            48,                            194                        ],                        [                            48,                            195                        ],                        [                            48,                            196                        ],                        [                            48,                            197                        ],                        [                            49,                            198                        ],                        [                            49,                            199                        ],                        [                            49,                            200                        ],                        [                            49,                            201                        ],                        [                            50,                            202                        ],                        [                            50,                            203                        ],                        [                            50,                            204                        ],                        [                            50,                            205                        ],                        [                            51,                            206                        ],                        [                            51,                            207                        ],                        [                            51,                            208                        ],                        [                            51,                            209                        ],                        [                            52,                            210                        ],                        [                            52,                            211                        ],                        [                            52,                            212                        ],                        [                            52,                            213                        ],                        [                            53,                            214                        ],                        [                            53,                            215                        ],                        [                            53,                            216                        ],                        [                            53,                            217                        ],                        [                            54,                            218                        ],                        [                            54,                            219                        ],                        [                            54,                            220                        ],                        [                            54,                            221                        ],                        [                            55,                            222                        ],                        [                            55,                            223                        ],                        [                            55,                            224                        ],                        [                            55,                            225                        ],                        [                            56,                            226                        ],                        [                            56,                            227                        ],                        [                            56,                            228                        ],                        [                            56,                            229                        ],                        [                            57,                            230                        ],                        [                            57,                            231                        ],                        [                            57,                            232                        ],                        [                            57,                            233                        ],                        [                            58,                            234                        ],                        [                            58,                            235                        ],                        [                            58,                            236                        ],                        [                            58,                            237                        ],                        [                            59,                            238                        ],                        [                            59,                            239                        ],                        [                            59,                            240                        ],                        [                            59,                            241                        ],                        [                            60,                            242                        ],                        [                            60,                            243                        ],                        [                            60,                            244                        ],                        [                            60,                            245                        ],                        [                            61,                            246                        ],                        [                            61,                            247                        ],                        [                            61,                            248                        ],                        [                            61,                            249                        ],                        [                            62,                            250                        ],                        [                            62,                            251                        ],                        [                            62,                            252                        ],                        [                            62,                            253                        ],                        [                            63,                            254                        ],                        [                            63,                            255                        ],                        [                            63,                            256                        ],                        [                            63,                            257                        ],                        [                            64,                            258                        ],                        [                            64,                            259                        ],                        [                            64,                            260                        ],                        [                            64,                            261                        ],                        [                            65,                            262                        ],                        [                            65,                            263                        ],                        [                            65,                            264                        ],                        [                            65,                            265                        ],                        [                            66,                            266                        ],                        [                            66,                            267                        ],                        [                            66,                            268                        ],                        [                            66,                            269                        ],                        [                            67,                            270                        ],                        [                            67,                            271                        ],                        [                            67,                            272                        ],                        [                            67,                            273                        ],                        [                            68,                            274                        ],                        [                            68,                            275                        ],                        [                            68,                            276                        ],                        [                            68,                            277                        ],                        [                            69,                            278                        ],                        [                            69,                            279                        ],                        [                            69,                            280                        ],                        [                            69,                            281                        ],                        [                            70,                            282                        ],                        [                            70,                            283                        ],                        [                            70,                            284                        ],                        [                            70,                            285                        ],                        [                            71,                            286                        ],                        [                            71,                            287                        ],                        [                            71,                            288                        ],                        [                            71,                            289                        ],                        [                            72,                            290                        ],                        [                            72,                            291                        ],                        [                            72,                            292                        ],                        [                            72,                            293                        ],                        [                            73,                            294                        ],                        [                            73,                            295                        ],                        [                            73,                            296                        ],                        [                            73,                            297                        ],                        [                            74,                            298                        ],                        [                            74,                            299                        ],                        [                            74,                            300                        ],                        [                            74,                            301                        ],                        [                            75,                            302                        ],                        [                            75,                            303                        ],                        [                            75,                            304                        ],                        [                            75,                            305                        ],                        [                            76,                            306                        ],                        [                            76,                            307                        ],                        [                            76,                            308                        ],                        [                            76,                            309                        ],                        [                            77,                            310                        ],                        [                            77,                            311                        ],                        [                            77,                            312                        ],                        [                            77,                            313                        ],                        [                            78,                            314                        ],                        [                            78,                            315                        ],                        [                            78,                            316                        ],                        [                            78,                            317                        ],                        [                            79,                            318                        ],                        [                            79,                            319                        ],                        [                            79,                            320                        ],                        [                            79,                            321                        ],                        [                            80,                            322                        ],                        [                            80,                            323                        ],                        [                            80,                            324                        ],                        [                            80,                            325                        ],                        [                            81,                            326                        ],                        [                            81,                            327                        ],                        [                            81,                            328                        ],                        [                            81,                            329                        ],                        [                            82,                            330                        ],                        [                            82,                            331                        ],                        [                            82,                            332                        ],                        [                            82,                            333                        ],                        [                            83,                            334                        ],                        [                            83,                            335                        ],                        [                            83,                            336                        ],                        [                            83,                            337                        ],                        [                            84,                            338                        ],                        [                            84,                            339                        ],                        [                            84,                            340                        ],                        [                            84,                            341                        ],                        [                            85,                            342                        ],                        [                            85,                            343                        ],                        [                            85,                            344                        ],                        [                            85,                            345                        ],                        [                            86,                            346                        ],                        [                            86,                            347                        ],                        [                            86,                            348                        ],                        [                            86,                            349                        ],                        [                            87,                            350                        ],                        [                            87,                            351                        ],                        [                            87,                            352                        ],                        [                            87,                            353                        ],                        [                            88,                            354                        ],                        [                            88,                            355                        ],                        [                            88,                            356                        ],                        [                            88,                            357                        ],                        [                            89,                            358                        ],                        [                            89,                            359                        ],                        [                            89,                            360                        ],                        [                            89,                            361                        ],                        [                            90,                            362                        ],                        [                            90,                            363                        ],                        [                            90,                            364                        ],                        [                            90,                            365                        ],                        [                            91,                            366                        ],                        [                            91,                            367                        ],                        [                            91,                            368                        ],                        [                            91,                            369                        ],                        [                            92,                            370                        ],                        [                            92,                            371                        ],                        [                            92,                            372                        ],                        [                            92,                            373                        ],                        [                            93,                            374                        ],                        [                            93,                            375                        ],                        [                            93,                            376                        ],                        [                            93,                            377                        ],                        [                            94,                            378                        ],                        [                            94,                            379                        ],                        [                            94,                            380                        ],                        [                            94,                            381                        ],                        [                            95,                            382                        ],                        [                            95,                            383                        ],                        [                            95,                            384                        ],                        [                            95,                            385                        ],                        [                            96,                            386                        ],                        [                            96,                            387                        ],                        [                            96,                            388                        ],                        [                            96,                            389                        ],                        [                            97,                            390                        ],                        [                            97,                            391                        ],                        [                            97,                            392                        ],                        [                            97,                            393                        ],                        [                            98,                            394                        ],                        [                            98,                            395                        ],                        [                            98,                            396                        ],                        [                            98,                            397                        ],                        [                            99,                            398                        ],                        [                            99,                            399                        ],                        [                            99,                            400                        ],                        [                            99,                            401                        ],                        [                            100,                            402                        ],                        [                            100,                            403                        ],                        [                            100,                            404                        ],                        [                            100,                            405                        ],                        [                            101,                            406                        ],                        [                            101,                            407                        ],                        [                            101,                            408                        ],                        [                            101,                            409                        ],                        [                            102,                            410                        ],                        [                            102,                            411                        ],                        [                            102,                            412                        ],                        [                            102,                            413                        ],                        [                            103,                            414                        ],                        [                            103,                            415                        ],                        [                            103,                            416                        ],                        [                            103,                            417                        ],                        [                            104,                            418                        ],                        [                            104,                            419                        ],                        [                            104,                            420                        ],                        [                            104,                            421                        ],                        [                            105,                            422                        ],                        [                            105,                            423                        ],                        [                            105,                            424                        ],                        [                            105,                            425                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {                        &quot;0&quot;: {                            &quot;ring&quot;: 0                        },                        &quot;1&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;10&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;100&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;101&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;102&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;103&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;104&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;105&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;106&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;107&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;108&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;109&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;11&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;110&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;111&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;112&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;113&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;114&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;115&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;116&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;117&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;118&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;119&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;12&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;120&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;121&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;122&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;123&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;124&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;125&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;126&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;127&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;128&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;129&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;13&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;130&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;131&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;132&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;133&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;134&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;135&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;136&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;137&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;138&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;139&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;14&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;140&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;141&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;142&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;143&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;144&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;145&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;146&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;147&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;148&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;149&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;15&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;150&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;151&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;152&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;153&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;154&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;155&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;156&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;157&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;158&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;159&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;16&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;160&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;161&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;162&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;163&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;164&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;165&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;166&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;167&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;168&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;169&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;17&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;170&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;171&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;172&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;173&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;174&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;175&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;176&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;177&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;178&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;179&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;18&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;180&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;181&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;182&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;183&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;184&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;185&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;186&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;187&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;188&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;189&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;19&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;190&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;191&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;192&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;193&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;194&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;195&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;196&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;197&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;198&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;199&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;2&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;20&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;200&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;201&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;202&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;203&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;204&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;205&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;206&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;207&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;208&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;209&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;21&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;210&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;211&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;212&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;213&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;214&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;215&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;216&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;217&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;218&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;219&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;22&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;220&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;221&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;222&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;223&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;224&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;225&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;226&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;227&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;228&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;229&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;23&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;230&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;231&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;232&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;233&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;234&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;235&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;236&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;237&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;238&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;239&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;24&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;240&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;241&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;242&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;243&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;244&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;245&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;246&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;247&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;248&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;249&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;25&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;250&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;251&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;252&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;253&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;254&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;255&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;256&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;257&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;258&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;259&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;26&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;260&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;261&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;262&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;263&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;264&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;265&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;266&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;267&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;268&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;269&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;27&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;270&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;271&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;272&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;273&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;274&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;275&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;276&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;277&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;278&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;279&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;28&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;280&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;281&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;282&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;283&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;284&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;285&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;286&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;287&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;288&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;289&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;29&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;290&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;291&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;292&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;293&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;294&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;295&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;296&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;297&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;298&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;299&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;3&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;30&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;300&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;301&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;302&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;303&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;304&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;305&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;306&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;307&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;308&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;309&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;31&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;310&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;311&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;312&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;313&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;314&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;315&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;316&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;317&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;318&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;319&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;32&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;320&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;321&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;322&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;323&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;324&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;325&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;326&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;327&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;328&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;329&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;33&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;330&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;331&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;332&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;333&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;334&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;335&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;336&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;337&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;338&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;339&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;34&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;340&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;341&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;342&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;343&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;344&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;345&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;346&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;347&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;348&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;349&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;35&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;350&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;351&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;352&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;353&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;354&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;355&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;356&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;357&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;358&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;359&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;36&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;360&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;361&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;362&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;363&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;364&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;365&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;366&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;367&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;368&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;369&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;37&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;370&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;371&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;372&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;373&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;374&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;375&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;376&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;377&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;378&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;379&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;38&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;380&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;381&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;382&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;383&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;384&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;385&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;386&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;387&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;388&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;389&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;39&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;390&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;391&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;392&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;393&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;394&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;395&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;396&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;397&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;398&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;399&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;4&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;40&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;400&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;401&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;402&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;403&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;404&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;405&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;406&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;407&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;408&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;409&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;41&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;410&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;411&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;412&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;413&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;414&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;415&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;416&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;417&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;418&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;419&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;42&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;420&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;421&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;422&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;423&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;424&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;425&quot;: {                            &quot;ring&quot;: 4                        },                        &quot;43&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;44&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;45&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;46&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;47&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;48&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;49&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;5&quot;: {                            &quot;ring&quot;: 1                        },                        &quot;50&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;51&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;52&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;53&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;54&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;55&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;56&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;57&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;58&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;59&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;6&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;60&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;61&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;62&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;63&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;64&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;65&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;66&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;67&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;68&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;69&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;7&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;70&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;71&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;72&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;73&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;74&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;75&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;76&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;77&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;78&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;79&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;8&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;80&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;81&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;82&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;83&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;84&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;85&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;86&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;87&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;88&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;89&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;9&quot;: {                            &quot;ring&quot;: 2                        },                        &quot;90&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;91&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;92&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;93&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;94&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;95&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;96&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;97&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;98&quot;: {                            &quot;ring&quot;: 3                        },                        &quot;99&quot;: {                            &quot;ring&quot;: 3                        }                    }                }            ]        },        &quot;zkc&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            2,                            1                        ],                        [                            3,                            1                        ],                        [                            3,                            2                        ],                        [                            4,                            1                        ],                        [                            4,                            2                        ],                        [                            4,                            3                        ],                        [                            5,                            1                        ],                        [                            6,                            1                        ],                        [                            7,                            1                        ],                        [                            7,                            5                        ],                        [                            7,                            6                        ],                        [                            8,                            1                        ],                        [                            8,                            2                        ],                        [                            8,                            3                        ],                        [                            8,                            4                        ],                        [                            9,                            1                        ],                        [                            9,                            3                        ],                        [                            10,                            3                        ],                        [                            11,                            1                        ],                        [                            11,                            5                        ],                        [                            11,                            6                        ],                        [                            12,                            1                        ],                        [                            13,                            1                        ],                        [                            13,                            4                        ],                        [                            14,                            1                        ],                        [                            14,                            2                        ],                        [                            14,                            3                        ],                        [                            14,                            4                        ],                        [                            17,                            6                        ],                        [                            17,                            7                        ],                        [                            18,                            1                        ],                        [                            18,                            2                        ],                        [                            20,                            1                        ],                        [                            20,                            2                        ],                        [                            22,                            1                        ],                        [                            22,                            2                        ],                        [                            26,                            24                        ],                        [                            26,                            25                        ],                        [                            28,                            3                        ],                        [                            28,                            24                        ],                        [                            28,                            25                        ],                        [                            29,                            3                        ],                        [                            30,                            24                        ],                        [                            30,                            27                        ],                        [                            31,                            2                        ],                        [                            31,                            9                        ],                        [                            32,                            1                        ],                        [                            32,                            25                        ],                        [                            32,                            26                        ],                        [                            32,                            29                        ],                        [                            33,                            3                        ],                        [                            33,                            9                        ],                        [                            33,                            15                        ],                        [                            33,                            16                        ],                        [                            33,                            19                        ],                        [                            33,                            21                        ],                        [                            33,                            23                        ],                        [                            33,                            24                        ],                        [                            33,                            30                        ],                        [                            33,                            31                        ],                        [                            33,                            32                        ],                        [                            34,                            9                        ],                        [                            34,                            10                        ],                        [                            34,                            14                        ],                        [                            34,                            15                        ],                        [                            34,                            16                        ],                        [                            34,                            19                        ],                        [                            34,                            20                        ],                        [                            34,                            21                        ],                        [                            34,                            23                        ],                        [                            34,                            24                        ],                        [                            34,                            27                        ],                        [                            34,                            28                        ],                        [                            34,                            29                        ],                        [                            34,                            30                        ],                        [                            34,                            31                        ],                        [                            34,                            32                        ],                        [                            34,                            33                        ]                    ],                    &quot;metadata&quot;: {                        &quot;name&quot;: {                            &quot;values&quot;: [                                &quot;Bernita Blizzard&quot;,                                &quot;Lauran Lenahan&quot;,                                &quot;Kallie Kerr&quot;,                                &quot;Yun Yearsley&quot;,                                &quot;Krystina Kehr&quot;,                                &quot;Marisa Mccullough&quot;,                                &quot;Sandra Soderquist&quot;,                                &quot;Latisha Luczynski&quot;,                                &quot;Gertrudis Guadarrama&quot;,                                &quot;Ramonita Raley&quot;,                                &quot;Tessa Tuff&quot;,                                &quot;Michell Murphey&quot;,                                &quot;Juliana Jenny&quot;,                                &quot;Imogene Ivie&quot;,                                &quot;Ricky Revis&quot;,                                &quot;Tonia Tighe&quot;,                                &quot;Lyle Lamanna&quot;,                                &quot;Michael Motto&quot;,                                &quot;Charlie Cartwright&quot;,                                &quot;Aimee Aschenbrenner&quot;,                                &quot;Vi Vallery&quot;,                                &quot;Shaquana Stocking&quot;,                                &quot;Penelope Percival&quot;,                                &quot;Bari Barrentine&quot;,                                &quot;Janie Jeske&quot;,                                &quot;Breann Brodie&quot;,                                &quot;Carmel Clara&quot;,                                &quot;Nada Nicol&quot;,                                &quot;Francisca Fu&quot;,                                &quot;Shyla Schranz&quot;,                                &quot;Clarissa Crooks&quot;,                                &quot;Hilario Holzwarth&quot;,                                &quot;Huong Hodge&quot;,                                &quot;Lavonne Leng&quot;                            ]                        }                    },                    &quot;nodes&quot;: {                        &quot;1&quot;: {                            &quot;headHoncho&quot;: true                        },                        &quot;34&quot;: {                            &quot;headHoncho&quot;: true                        }                    }                }            ]        }    },    &quot;title&quot;: &quot;kitchen_sink&quot;}",
    "url": "/docs/examples/kitchen_sink.html",
    "relUrl": "/docs/examples/kitchen_sink.html"
  },
  "27": {
    "id": "27",
    "title": "layers",
    "content": "webweb supports adding layers to networks (think timeslices). You can more forward through these with the right arrow key and backwards with the left.showing:                 python            python (networkx)            matlab            jsonfrom webweb import Webweb = Web(    title='oroboros',    adjacency=[[0, 1], [1, 2], [2, 3]],    metadata={        'isHead' : {            'values' : [True, False, False, False],        }    })# oroboros begins chompin'web.networks.oroboros.add_layer(    adjacency=[[0, 1], [1, 2], [2, 3], [3, 0]],    metadata={        'isHead' : {            'values' : [True, False, False, False],        }    })web.networks.oroboros.add_layer(    adjacency=[[0, 1], [1, 2], [2, 0]],    metadata={        'isHead' : {            'values' : [True, False, False],        }    })web.networks.oroboros.add_layer(    adjacency=[[0, 1], [1, 0]],    metadata={        'isHead' : {            'values' : [True, False],        }    })# lame symbol for infinity if you ask me.web.networks.oroboros.add_layer(    adjacency=[],    metadata={        'isHead' : {            'values' : [True],        }    })# display the first layer first (you could put, say, 1 here and it would display the second)web.display.networkLayer = 0# we'll compute node color by the `isHead` attributeweb.display.colorBy = 'isHead'# we'll compute node size by the `isHead` attributeweb.display.sizeBy = 'isHead'# show the visualizationweb.show()from webweb import Webimport networkx as nxsnake = nx.Graph()snake.add_edges_from([[0, 1], [1, 2], [2, 3]])snake.nodes[0]['isHead'] = Truesnake.nodes[1]['isHead'] = Falsesnake.nodes[2]['isHead'] = Falsesnake.nodes[3]['isHead'] = Falseweb = Web(title='oroboros', nx_G=snake)snake.add_edge(0, 3)web.networks.oroboros.add_layer(nx_G=snake)snake.remove_node(3)snake.add_edge(0, 2)web.networks.oroboros.add_layer(nx_G=snake)snake.remove_node(2)snake.add_edge(0, 1)web.networks.oroboros.add_layer(nx_G=snake)snake.remove_node(1)web.networks.oroboros.add_layer(nx_G=snake)# display the first layer first (you could put, say, 1 here and it would display the second)web.display.networkLayer = 0# we'll compute node color by the `isHead` attributeweb.display.colorBy = 'isHead'# we'll compute node size by the `isHead` attributeweb.display.sizeBy = 'isHead'# show the visualizationweb.show()% define a few layers' edge lists for a multilayer network called oroborosl_one = [1,2; 2,3; 3,4];l_two = [1,2; 2,3; 3,4; 4,1];l_three = [1,2; 2,3; 3,1];l_four = [1,2; 2,1];l_five = [];% Place the layers under oroboros in the order that you'd like them.% Let's initialize an empty array of layers firstww.networks.oroboros.layers = {};% Build the first layer as a networkObjectnetObj.edgeList = l_one;% Assign it its *own* metadata, specific to this layernetObj.metadata.isHead.values = [1,0,0,0];netObj.metadata.isHead.type = 'binary';% Append it to the layersww.networks.oroboros.layers{end+1} = netObj;% Repeat for layer 2netObj.edgeList = l_two;netObj.metadata.isHead.values = [1,0,0,0];netObj.metadata.isHead.type = 'binary';ww.networks.oroboros.layers{end+1} = netObj;% ... and layer 3.netObj.edgeList = l_three;netObj.metadata.isHead.values = [1,0,0];netObj.metadata.isHead.type = 'binary';ww.networks.oroboros.layers{end+1} = netObj;% ... and layer 4.netObj.edgeList = l_four;netObj.metadata.isHead.values = [1,0];netObj.metadata.isHead.type = 'binary';ww.networks.oroboros.layers{end+1} = netObj;% ... and layer 5.netObj.edgeList = l_five;netObj.metadata.isHead.values = 1;netObj.metadata.isHead.type = 'binary';ww.networks.oroboros.layers{end+1} = netObj;% BONUS: set default node color and size to the `isHead` attributeww.display.colorBy = 'isHead';ww.display.sizeBy = 'isHead';webweb(ww);{    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;isHead&quot;,        &quot;networkLayer&quot;: 0,        &quot;sizeBy&quot;: &quot;isHead&quot;    },    &quot;networks&quot;: {        &quot;oroboros&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ]                    ],                    &quot;metadata&quot;: {                        &quot;isHead&quot;: {                            &quot;values&quot;: [                                true,                                false,                                false,                                false                            ]                        }                    },                    &quot;nodes&quot;: {}                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            0                        ]                    ],                    &quot;metadata&quot;: {                        &quot;isHead&quot;: {                            &quot;values&quot;: [                                true,                                false,                                false,                                false                            ]                        }                    },                    &quot;nodes&quot;: {}                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            0                        ]                    ],                    &quot;metadata&quot;: {                        &quot;isHead&quot;: {                            &quot;values&quot;: [                                true,                                false,                                false                            ]                        }                    },                    &quot;nodes&quot;: {}                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            0                        ]                    ],                    &quot;metadata&quot;: {                        &quot;isHead&quot;: {                            &quot;values&quot;: [                                true,                                false                            ]                        }                    },                    &quot;nodes&quot;: {}                },                {                    &quot;edgeList&quot;: [],                    &quot;metadata&quot;: {                        &quot;isHead&quot;: {                            &quot;values&quot;: [                                true                            ]                        }                    },                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;oroboros&quot;}",
    "url": "/docs/examples/layers.html",
    "relUrl": "/docs/examples/layers.html"
  },
  "28": {
    "id": "28",
    "title": "linkLength",
    "content": "type: positive non-zero integersynonyms: ldefault: 20we can change the length of link edges by setting the display.linkLength parameter.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])web.display.linkLength = 100# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;linkLength&quot;: 100    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/linkLength.html",
    "relUrl": "/docs/documentation/display/linkLength.html"
  },
  "29": {
    "id": "29",
    "title": "linkStrength",
    "content": "type: positive non-zero floatdefault: 1we can adjust how much links resist deformation.This number should be between 0 and 1.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])web.display.linkStrength = .5# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;linkStrength&quot;: 0.5    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/linkStrength.html",
    "relUrl": "/docs/documentation/display/linkStrength.html"
  },
  "30": {
    "id": "30",
    "title": "multiple networks",
    "content": "you can give webweb more than one network and toggle between those networks with the up and down arrow keys.showing:                 python            python (networkx)            matlab            jsonfrom webweb import Web# define the node names and a hunger metadata attribute to appear in all networksweb = Web(    display={        'nodes' : {            0 : {                'name' : 'dane',                'hunger' : 4,            },            1 : {                'name' : 'sebastian',                'hunger' : 9,            },            2 : {                'name' : 'manny',                'hunger' : 2,            },            3 : {                'name' : 'brock',                'hunger' : 4,            },            4 : {                'name' : 'ted',                'hunger' : 12.1,            },            5 : {                'name' : 'donnie',                'hunger' : 5,            },        }    },)# add a 'snake' networkweb.networks.snake(    adjacency=[[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]],    nodes={        0 : {            'isHead' : False,        },        1 : {            'isHead' : False,        },        2 : {            'isHead' : False,        },        3 : {            'isHead' : False,        },        4 : {            'isHead' : False,        },        5 : {            'isHead' : True,        },    },)# add a 'starfish' networkweb.networks.starfish(    adjacency=[[0, 1], [0, 2], [0, 3], [0, 4], [0, 5]],    nodes={        0 : {            'texture' : 'gooey',            'power' : 1,        },        1 : {            'texture' : 'fishy',            'power' : 3,        },        2 : {            'texture' : 'chewy',            'power' : 3.8,        },        3 : {            'texture' : 'crunchy',            'power' : 0.2,        },        4 : {            'texture' : 'chewy',            'power' : 1,        },        5 : {            'texture' : 'gooey',            'power' : 3.1415,        },    })# display the `starfish` network firstweb.display.networkName = 'starfish'# we'll compute node color by the `texture` attributeweb.display.colorBy = 'texture'# we'll compute node size by the `hunger` attributeweb.display.sizeBy = 'hunger'# show the visualizationweb.show()from webweb import Webimport networkx as nx# define the node names and a hunger metadata attribute to appear in all networksweb = Web(    display={        'nodes' : {            0 : {                'name' : 'dane',                'hunger' : 4,            },            1 : {                'name' : 'sebastian',                'hunger' : 9,            },            2 : {                'name' : 'manny',                'hunger' : 2,            },            3 : {                'name' : 'brock',                'hunger' : 4,            },            4 : {                'name' : 'ted',                'hunger' : 12.1,            },            5 : {                'name' : 'donnie',                'hunger' : 5,            },        }    },)snake = nx.Graph()snake.add_edges_from([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])snake.nodes[0]['isHead'] = Falsesnake.nodes[1]['isHead'] = Falsesnake.nodes[2]['isHead'] = Falsesnake.nodes[3]['isHead'] = Falsesnake.nodes[4]['isHead'] = Falsesnake.nodes[5]['isHead'] = True# add the 'snake' networkweb.networks.snake(nx_G=snake)starfish = nx.Graph()starfish.add_edges_from([[0, 1], [0, 2], [0, 3], [0, 4], [0, 5]])starfish.nodes[0]['texture'] = 'gooey'starfish.nodes[0]['power'] = 1starfish.nodes[1]['texture'] = 'fishy'starfish.nodes[0]['power'] = 3starfish.nodes[2]['texture'] = 'chewy'starfish.nodes[0]['power'] = 3.8starfish.nodes[3]['texture'] = 'crunchy'starfish.nodes[0]['power'] = 0.2starfish.nodes[4]['texture'] = 'chewy'starfish.nodes[0]['power'] = 1starfish.nodes[5]['texture'] = 'gooey'starfish.nodes[0]['power'] = 3.1415# add the 'starfish' networkweb.networks.starfish(nx_G=starfish)# display the `starfish` network firstweb.display.networkName = 'starfish'# we'll compute node color by the `hunger` attributeweb.display.colorBy = 'hunger'# we'll compute node size by the `isHead` attributeweb.display.sizeBy = 'isHead'# show the visualizationweb.show()% set some node names and a metadata attribute (hunger) to appear for all% of the networks that we will display. Since these metadata attributes% apply globally, we put them under ww.displayww.display.metadata.names = {'dane','sebastian','manny','brock','ted','donnie'};ww.display.metadata.hunger = [4,9,2,4,12.1,5];% define a network called snakeww.networks.snake.edgeList = [1,2; 2,3; 3,4; 4,5; 5,6];ww.networks.snake.metadata.isHead.values = [0,0,0,0,0,1];% define another called starfishww.networks.starfish.edgeList = [1,2; 1,3; 1,4; 1,5; 1,6];ww.networks.starfish.metadata.texture.values={'gooey','fishy','chewy',...    'crunchy','chewy','gooey'};ww.networks.starfish.metadata.power.values={1,3,3.8,0.2,1,3.1415};% BONUS force the starfish network to display first by defaultww.display.networkName = 'starfish';% BONUS force node color to texture metadataww.display.colorBy = 'texture';% BONUS force node size to isHead metadataww.display.sizeBy = 'hunger';webweb(ww){    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;texture&quot;,        &quot;networkName&quot;: &quot;starfish&quot;,        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;hunger&quot;: 4,                &quot;name&quot;: &quot;dane&quot;            },            &quot;1&quot;: {                &quot;hunger&quot;: 9,                &quot;name&quot;: &quot;sebastian&quot;            },            &quot;2&quot;: {                &quot;hunger&quot;: 2,                &quot;name&quot;: &quot;manny&quot;            },            &quot;3&quot;: {                &quot;hunger&quot;: 4,                &quot;name&quot;: &quot;brock&quot;            },            &quot;4&quot;: {                &quot;hunger&quot;: 12.1,                &quot;name&quot;: &quot;ted&quot;            },            &quot;5&quot;: {                &quot;hunger&quot;: 5,                &quot;name&quot;: &quot;donnie&quot;            }        },        &quot;sizeBy&quot;: &quot;hunger&quot;    },    &quot;networks&quot;: {        &quot;snake&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {                        &quot;0&quot;: {                            &quot;isHead&quot;: false                        },                        &quot;1&quot;: {                            &quot;isHead&quot;: false                        },                        &quot;2&quot;: {                            &quot;isHead&quot;: false                        },                        &quot;3&quot;: {                            &quot;isHead&quot;: false                        },                        &quot;4&quot;: {                            &quot;isHead&quot;: false                        },                        &quot;5&quot;: {                            &quot;isHead&quot;: true                        }                    }                }            ]        },        &quot;starfish&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            0,                            2                        ],                        [                            0,                            3                        ],                        [                            0,                            4                        ],                        [                            0,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {                        &quot;0&quot;: {                            &quot;power&quot;: 1,                            &quot;texture&quot;: &quot;gooey&quot;                        },                        &quot;1&quot;: {                            &quot;power&quot;: 3,                            &quot;texture&quot;: &quot;fishy&quot;                        },                        &quot;2&quot;: {                            &quot;power&quot;: 3.8,                            &quot;texture&quot;: &quot;chewy&quot;                        },                        &quot;3&quot;: {                            &quot;power&quot;: 0.2,                            &quot;texture&quot;: &quot;crunchy&quot;                        },                        &quot;4&quot;: {                            &quot;power&quot;: 1,                            &quot;texture&quot;: &quot;chewy&quot;                        },                        &quot;5&quot;: {                            &quot;power&quot;: 3.1415,                            &quot;texture&quot;: &quot;gooey&quot;                        }                    }                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/examples/multiple_networks.html",
    "relUrl": "/docs/examples/multiple_networks.html"
  },
  "31": {
    "id": "31",
    "title": "nameToMatch",
    "content": "type: stringdefault: &quot;&quot;we can show nodes whose name matches a given value by setting the nameToMatch parameter.showing:                 python            jsonfrom webweb import Webweb = Web(    adjacency=[[0, 1], [1, 2]],    display={        'nodes' : {            0 : {                'name' : 'Huberg',            },            1 : {                'name' : 'Pierot',            },            2 : {                'name' : 'Slartibertfast',            },        },    },)web.display.nameToMatch = 'Pierot'# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;nameToMatch&quot;: &quot;Pierot&quot;,        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;name&quot;: &quot;Huberg&quot;            },            &quot;1&quot;: {                &quot;name&quot;: &quot;Pierot&quot;            },            &quot;2&quot;: {                &quot;name&quot;: &quot;Slartibertfast&quot;            }        }    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/nameToMatch.html",
    "relUrl": "/docs/documentation/display/nameToMatch.html"
  },
  "32": {
    "id": "32",
    "title": "networkLayer",
    "content": "type: positive integer (an index)default: 0webweb will by default display the first layer, but if we’d like to show a particular one we can do so by setting the display.networkLayer property to the index of the layer we want to show.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web(title='webweb', adjacency=[[0, 1]])web.networks.webweb.add_layer(adjacency=[[0, 1], [1, 2]])web.display.networkLayer = 1# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;networkLayer&quot;: 1    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                },                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/networkLayer.html",
    "relUrl": "/docs/documentation/display/networkLayer.html"
  },
  "33": {
    "id": "33",
    "title": "networkName",
    "content": "type: stringwebweb will by default display the first network we add to it, but if we’d like to show a particular one we can do so by setting the display.networkName property to name of the network we’d like to show.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web(title='web1', adjacency=[[0, 1]])web.networks.web2(adjacency=[[0, 1], [1, 2]])web.display.networkName = &quot;web2&quot;# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;networkName&quot;: &quot;web2&quot;    },    &quot;networks&quot;: {        &quot;web1&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        },        &quot;web2&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;web1&quot;}",
    "url": "/docs/documentation/display/networkName.html",
    "relUrl": "/docs/documentation/display/networkName.html"
  },
  "34": {
    "id": "34",
    "title": "python",
    "content": "full documentation for the python code.you interact with webweb via the webweb.Web object, which has the following attributes:  display: dictionary of webweb display parameters; see the display documentation  networks: a dictionary of webweb.Network objectsa python webweb.Network object has the following attributes:  layers: a list of dictionaries with the following attributes:{    'edgeList' : [[0, 1, .5], ...],    'nodes' : {        'key1' : {            'attribute1' : value1,            'attribute2' : value2,            ...        },        ...    },    'metadata' : {        'attribute3' : {            'values' : [1, 2, ...],            ...        },        ...    },}",
    "url": "/documentation/python/",
    "relUrl": "/documentation/python/"
  },
  "35": {
    "id": "35",
    "title": "radius",
    "content": "type: positive non-zero floatsynonyms: rdefault: 5we can change the radius of the nodes by setting the display.radius parameter.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])# make nodes really bigweb.display.radius = 20# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;radius&quot;: 20    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/radius.html",
    "relUrl": "/docs/documentation/display/radius.html"
  },
  "36": {
    "id": "36",
    "title": "scaleLinkOpacity",
    "content": "type: booleandefault: falsewe can scale link opacities by their weight by setting the scaleLinkOpacity parameter.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1, 5], [1, 2, 20], [2, 3, .2], [3, 4, 70], [4, 5, 100]])web.display.scaleLinkOpacity = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;scaleLinkOpacity&quot;: true    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1,                            5                        ],                        [                            1,                            2,                            20                        ],                        [                            2,                            3,                            0.2                        ],                        [                            3,                            4,                            70                        ],                        [                            4,                            5,                            100                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/scaleLinkOpacity.html",
    "relUrl": "/docs/documentation/display/scaleLinkOpacity.html"
  },
  "37": {
    "id": "37",
    "title": "scaleLinkWidth",
    "content": "type: booleandefault: falsewe can scale link widths by their weight by setting the scaleLinkWidth parameter.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1, 5], [1, 2, 20], [2, 3, .2], [3, 4, 70], [4, 5, 100]])web.display.scaleLinkWidth = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;scaleLinkWidth&quot;: true    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1,                            5                        ],                        [                            1,                            2,                            20                        ],                        [                            2,                            3,                            0.2                        ],                        [                            3,                            4,                            70                        ],                        [                            4,                            5,                            100                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/scaleLinkWidth.html",
    "relUrl": "/docs/documentation/display/scaleLinkWidth.html"
  },
  "38": {
    "id": "38",
    "title": "showLegend",
    "content": "type: booleandefault: trueIf true, webweb will display a legend describing how nodes are colored and sized.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [0, 2], [0, 3], [0, 4], [0, 5]])# size and color by degreeweb.display.sizeBy = 'degree'web.display.colorBy = 'degree'# hide webweb's legend (it defaults to being shown)web.display.showLegend = False# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;colorBy&quot;: &quot;degree&quot;,        &quot;showLegend&quot;: false,        &quot;sizeBy&quot;: &quot;degree&quot;    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            0,                            2                        ],                        [                            0,                            3                        ],                        [                            0,                            4                        ],                        [                            0,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/showLegend.html",
    "relUrl": "/docs/documentation/display/showLegend.html"
  },
  "39": {
    "id": "39",
    "title": "showNodeNames",
    "content": "type: booleandefault: falsewe can show all node names by setting the showNodeNames parameter.showing:                 python            jsonfrom webweb import Webweb = Web(    adjacency=[[0, 1], [1, 2]],    display={        'nodes' : {            0 : {                'name' : 'Huberg',            },            1 : {                'name' : 'Pierot',            },            2 : {                'name' : 'Slartibertfast',            },        },    },)web.display.showNodeNames = True# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;nodes&quot;: {            &quot;0&quot;: {                &quot;name&quot;: &quot;Huberg&quot;            },            &quot;1&quot;: {                &quot;name&quot;: &quot;Pierot&quot;            },            &quot;2&quot;: {                &quot;name&quot;: &quot;Slartibertfast&quot;            }        },        &quot;showNodeNames&quot;: true    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/showNodeNames.html",
    "relUrl": "/docs/documentation/display/showNodeNames.html"
  },
  "40": {
    "id": "40",
    "title": "sizeBy",
    "content": "type: stringdefault: 'none'we can compute node radii by a metadata attribute by setting the sizeBy parameter to that attribute’s name.categorical metadata attributes can’t be used to compute node sizes.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]], display={    'metadata' : {        'happiness' : {            'values' : [5, 10, 7, 8, 1, 3],        }    }})# use the 'happiness' attribute to size nodesweb.display.sizeBy = 'happiness'# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;metadata&quot;: {            &quot;happiness&quot;: {                &quot;values&quot;: [                    5,                    10,                    7,                    8,                    1,                    3                ]            }        },        &quot;sizeBy&quot;: &quot;happiness&quot;    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/sizeBy.html",
    "relUrl": "/docs/documentation/display/sizeBy.html"
  },
  "41": {
    "id": "41",
    "title": "webweb.Network",
    "content": "webweb.Network(**kwargs)a webweb Network objectcalling a webweb.Network object sets the first layer of thatwebweb.Network object using the parameters passed.if the object already had layers, those layers will be removed.see add_layer for parameter information",
    "url": "/docs/documentation/python/webweb.Network.html",
    "relUrl": "/docs/documentation/python/webweb.Network.html"
  },
  "42": {
    "id": "42",
    "title": "webweb.Network.add_layer",
    "content": "webweb.Network.add_layer(adjacency=[], adjacency_type=None, nodes={}, metadata=None, nx_G=None, gml_file=None)adds a layer to the network.parameters:  adjacency: edge list or adjacency matrix  adjacency_type: string. ‘matrix’ or ‘edge list’  nodes: dict of node attribute dicts    {  'key1': {      'attribute1': 'value1',      ...  },  ...}        metadata: dict of vectorized metadata and display information.    {  'attribute': {      'values': [ &quot;attribute_value&quot;, ...],      # `categories` only needs to be supplied if `values` holds      # categorical data that is represented by numbers.      # the values in the `values` array will be used as indexes to      # this array.      'categories': [&quot;category1&quot;, &quot;category2&quot;, ...]      # `type` only needs to be set if you're displaying binary      # information with 0/1 instead of True/False      'type': 'binary',  }}        nx_G: a networkx graph.  gml_file: path to a gml filenodes which appear in both the adjacency and as keys in the nodesdictionary will be given the values of the attributes under theircorresponding key in the nodes dictionaryadjacency_type only needs to be supplied if your adjacency isrepresented as a matrix and that matrix has 3 or fewer nodesno layer will be made without at least one of:  adjacency  nodes  metadata  nx_G  gml_file",
    "url": "/docs/documentation/python/webweb.Network_add_layer.html",
    "relUrl": "/docs/documentation/python/webweb.Network_add_layer.html"
  },
  "43": {
    "id": "43",
    "title": "webweb.Web",
    "content": "webweb.Web(adjacency=[], title='webweb', display={}, adjacency_type=None, nodes={}, metadata=None, nx_G=None, gml_file=None)a webweb object.a collection of named webweb Network objects, a set of display parameters, and a titleusage:  web = Web(adjacency=[[0, 1]], title='a web woohoo')parameters:  adjacency: edge list or adjacency matrix  title: string. Will set the html title of the visualization ifdisplay.attachWebwebToElementWithId = None  display: dictionary of display parameters  adjacency_type: string. ‘matrix’ or ‘edge list’  nodes: dict of node attribute dicts    {  'key1': {      'attribute1': 'value1',      ...  },  ...}        metadata: dict of vectorized metadata and display information.    {  'attribute': {      'values': [ &quot;attribute_value&quot;, ...],      # `categories` only needs to be supplied if `values` holds      # categorical data that is represented by numbers.      # the values in the `values` array will be used as indexes to      # this array.      'categories': [&quot;category1&quot;, &quot;category2&quot;, ...]      # `type` only needs to be set if you're displaying binary      # information with 0/1 instead of True/False      'type': 'binary',  }}        nx_G: a networkx graph.  gml_file: path to a gml filenodes which appear in both the adjacency and as keys in the nodesdictionary will be given the values of the attributes under theircorresponding key in the nodes dictionaryadjacency_type only needs to be supplied if your adjacency isrepresented as a matrix and that matrix has 3 or fewer nodes",
    "url": "/docs/documentation/python/webweb.Web.html",
    "relUrl": "/docs/documentation/python/webweb.Web.html"
  },
  "44": {
    "id": "44",
    "title": "webweb.Web.save",
    "content": "webweb.Web.save(path)saves the webweb visualization to the specified pathparameters:  path: the path to save to.",
    "url": "/docs/documentation/python/webweb.Web_save.html",
    "relUrl": "/docs/documentation/python/webweb.Web_save.html"
  },
  "45": {
    "id": "45",
    "title": "webweb.Web.show",
    "content": "webweb.Web.show()display the webweb visualization.  creates the html file  opens the web browser",
    "url": "/docs/documentation/python/webweb.Web_show.html",
    "relUrl": "/docs/documentation/python/webweb.Web_show.html"
  },
  "46": {
    "id": "46",
    "title": "webweb in the wild",
    "content": "For fun, here’s a running list of places webweb’s been used! If a project of yours uses webweb, shoot an email and we’ll add it to the list!  Can you escape a maze without walls?  Networks in Infinite Jest  Remnants of an Ancient Metabolism without Phosphate. Cell  Ape parasite origins of human malaria virulence genes. Nature Commmunications  Systematic inequality and hierarchy in faculty hiring networks. Science Advances  Efficiently inferring community structure in bipartite networks. Phys. Rev. E  A Network Approach to Analyzing Highly Recombinant Malaria Parasite Genes. PLoS Comp Biolciting webwebyou don’t have to cite webweb to use it, but if you’d like to, we certainly appreciate it!",
    "url": "/in-the-wild/",
    "relUrl": "/in-the-wild/"
  },
  "47": {
    "id": "47",
    "title": "width",
    "content": "type: positive non-zero floatsynonyms: wwe can change the width of the visualization by setting the display.width property.showing:                 python            jsonfrom webweb import Web# Instantiate webweb objectweb = Web([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5]])web.display.width = 50# show the visualizationweb.show(){    &quot;display&quot;: {        &quot;width&quot;: 50    },    &quot;networks&quot;: {        &quot;webweb&quot;: {            &quot;layers&quot;: [                {                    &quot;edgeList&quot;: [                        [                            0,                            1                        ],                        [                            1,                            2                        ],                        [                            2,                            3                        ],                        [                            3,                            4                        ],                        [                            4,                            5                        ]                    ],                    &quot;metadata&quot;: null,                    &quot;nodes&quot;: {}                }            ]        }    },    &quot;title&quot;: &quot;webweb&quot;}",
    "url": "/docs/documentation/display/width.html",
    "relUrl": "/docs/documentation/display/width.html"
  }
}
